///1. Two Sum
///Easy
///Given an array of integers, return indices of the two numbers such that they add up to a specific target.
///You may assume that each input would have exactly one solution, and you may not use the same element twice.
///Example:
///Given nums = [2, 7, 11, 15], target = 9,
///Because nums[0] + nums[1] = 2 + 7 = 9,
///return [0, 1].

public class Solution {
    public int[] TwoSum(int[] nums, int target) {
        Hashtable hashTable = new Hashtable();
        for(int i = 0; i < nums.Length; i++) {
            if (hashTable.ContainsKey(target - nums[i]))
            {
                if (i > Convert.ToInt32(hashTable[target - nums[i]]))
                    return new[] { Convert.ToInt32(hashTable[target - nums[i]]), i };
                else
                    return new[] { i, Convert.ToInt32(hashTable[target - nums[i]]) };
            }
            if (!hashTable.ContainsKey(nums[i]))
                hashTable.Add(nums[i], i);
        }
        return null;
    }
}